# The sources of the following configuration are:
# https://madaidans-insecurities.github.io/guides/linux-hardening.html#boot-parameters
# https://docs.clip-os.org/clipos/kernel.html#command-line-parameters
# http://kernsec.org/wiki/index.php/Kernel_Self_Protection_Project/Recommended_Settings

# Increase difficulty of heap exploitation by disabling slab merging.
# Some exploits use heap overflow.
GRUB_CMDLINE_LINUX="$GRUB_CMDLINE_LINUX slab_nomerge"

# Always enable Kernel Page Table Isolation, even if the CPU claims
# it is safe from Meltdown.
GRUB_CMDLINE_LINUX="$GRUB_CMDLINE_LINUX pti=on"

# To prevent against L1TF, at the cost of losing hyper threading.
# NOTE: May bring down perfomance (slow).
GRUB_CMDLINE_LINUX="$GRUB_CMDLINE_LINUX nosmt"

# Z option enables red zoning, a way to detect overwrites on slab object's real
# size by adding areas around slab objects.
# F option adds many sanity checks to various slab operations.
# Requires to have enabled CONFIG_SLUB_DEBUG in kernel configuration.
# NOTE: May bring down performance (slow).
GRUB_CMDLINE_LINUX="$GRUB_CMDLINE_LINUX slub_debug=ZF"

# init_on_free enables feature which zero-fills page and slab allocations on free.
# It helps to mitigate some vulnerabilities of use-after-free.
# It is automatically set by INIT_ON_FREE_DEFAULT_ON kernel configuration.
# init_on_alloc which enables zero-fill of uninitialized heap memory.
# It is automatically set by INIT_ON_ALLOC_DEFAULT_ON kernel configuration.
GRUB_CMDLINE_LINUX="$GRUB_CMDLINE_LINUX init_on_alloc=1"
GRUB_CMDLINE_LINUX="$GRUB_CMDLINE_LINUX init_on_free=1"

# For x86_64 platform.
# Vsyscalls are obsolete and being replaced by vDSO (virtual dynamic shared object).
# It is the same as setting CONFIG_LEGACY_VSYSCALL_NONE=y.
GRUB_CMDLINE_LINUX="$GRUB_CMDLINE_LINUX vsyscall=none"

# Enable Spectre Variant 2 mitigation.
GRUB_CMDLINE_LINUX="$GRUB_CMDLINE_LINUX spectre_v2=on"

# Enable Spectre Variant 4 mitigation.
# It needs to in in-line with microcode.
GRUB_CMDLINE_LINUX="$GRUB_CMDLINE_LINUX spec_store_bypass_disable=on"

# Enable mitigations for MDS and disable SMT.
# https://www.kernel.org/doc/html/latest/admin-guide/hw-vuln/mds.html
GRUB_CMDLINE_LINUX="$GRUB_CMDLINE_LINUX mds=full,nosmt"

# IOMMU might still be enabled by the kernel although it has been disabled
# in the configuration. With the parameter we are forcing to disable it.
# It might be needed to add "intel_iommu=igfx_off" is some Intel processors
# in order to allow access to physical memory to the GPU.
GRUB_CMDLINE_LINUX="$GRUB_CMDLINE_LINUX iommu=force"

# Enables IOMMU to prevent DMA attacks.
GRUB_CMDLINE_LINUX="$GRUB_CMDLINE_LINUX intel_iommu=on"

# Panic on unocrrected errors reported by the Machine Check support.
GRUB_CMDLINE_LINUX="$GRUB_CMDLINE_LINUX mce=0"

# Force disable SMT.
GRUB_CMDLINE_LINUX="$GRUB_CMDLINE_LINUX nosmt=force"

# Disable TSX, enable all mitigations for the TSX Async Abort
# vulnerability and disable SMT.
# https://www.kernel.org/doc/html/latest/admin-guide/hw-vuln/tsx_async_abort.html
GRUB_CMDLINE_LINUX="$GRUB_CMDLINE_LINUX tsx=off tsx_async_abort=full,nosmt"

# Enable all mitigations for the L1TF vulnerability and disable SMT
# and L1D flush runtime control.
# https://www.kernel.org/doc/html/latest/admin-guide/hw-vuln/l1tf.html
GRUB_CMDLINE_LINUX="$GRUB_CMDLINE_LINUX l1tf=full,force"

# Mark all huge pages in the EPT as non-executable to mitigate iTLB multihit.
# This parameter allows to control the KVM hypervisor iTLB multihit mitigations.
# https://www.kernel.org/doc/html/latest/admin-guide/hw-vuln/multihit.html#mitigation-control-on-the-kernel-command-line-and-kvm-module-parameter
GRUB_CMDLINE_LINUX="$GRUB_CMDLINE_LINUX kvm.nx_huge_pages=force"

# Disable the busmaster bit on all PCI bridges during very
# early boot to avoid holes in IOMMU.
# https://mjg59.dreamwidth.org/54433.html
# https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=4444f8541dad16fefd9b8807ad1451e806ef1d94
# If the configuration CONFIG_EFI_DISABLE_PCI_DMA in Linux Kernel is enabled,
# the following parameter does not apply because it is already enabled.
GRUB_CMDLINE_LINUX="$GRUB_CMDLINE_LINUX efi=disable_early_pci_dma"

# Enables page allocator freelist randomization.
GRUB_CMDLINE_LINUX="$GRUB_CMDLINE_LINUX page_alloc.shuffle=1"

# The following parameter is provided by a patch in linux-hardened.
# Enables a simple form of entropy which is extracted during system start
# and added to the entropy obtained with GCC_PLUGIN_LATENT_ENTROPY.
# Requires GCC_PLUGIN_LATENT_ENTROPY to be enabled.
# Avoi script to crash when the string is not found by grep
set +e
RES=$(grep "CONFIG_GCC_PLUGIN_LATENT_ENTROPY=y" /boot/config-$(uname -r))
set -e
if [ "${RES}" != "" ]; then
    GRUB_CMDLINE_LINUX="$GRUB_CMDLINE_LINUX extra_latent_entropy"
else
    echo "Warning: CONFIG_GCC_PLUGIN_LATENT_ENTROPY not enabled," \
         "leaving extra_latent_entropy out."
fi

# Distrusts the CPU for initial entropy at boot as it is not possible to
# audit, may contain weaknesses or a backdoor.
# https://en.wikipedia.org/wiki/RDRAND#Reception
# https://twitter.com/pid_eins/status/1149649806056280069
# https://archive.nytimes.com/www.nytimes.com/interactive/2013/09/05/us/documents-reveal-nsa-campaign-against-encryption.html
# https://forums.whonix.org/t/entropy-config-random-trust-cpu-yes-or-no-rng-core-default-quality/8566
GRUB_CMDLINE_LINUX="$GRUB_CMDLINE_LINUX random.trust_cpu=off"

# Make console quiet in order to not give away sensitive information.
# Remove quiet from defaults because quiet must be before loglevel.
# GRUB_CMDLINE_LINUX_DEFAULT will be appended to GRUB_CMDLINE_LINUX and then
# quiet won't work.
GRUB_CMDLINE_LINUX_DEFAULT="$(echo "${GRUB_CMDLINE_LINUX_DEFAULT}" | sed "s/quiet//")"
GRUB_CMDLINE_LINUX="$GRUB_CMDLINE_LINUX quiet loglevel=0"

# Debugfs is full of sensitive information about the Linux Kernel.
GRUB_CMDLINE_LINUX="$GRUB_CMDLINE_LINUX debugfs=off"

# Make systemd talk less with the following settings.
GRUB_CMDLINE_LINUX="$GRUB_CMDLINE_LINUX systemd.show_status=0 systemd.log_level=0"

# TODO: Check this parameter in more detail and tests.
# Enables kernel lockdown.
# Disabled for now as it enforces module signature verification which breaks
# too many things.
#GRUB_CMDLINE_LINUX="$GRUB_CMDLINE_LINUX lockdown=confidentiality"
